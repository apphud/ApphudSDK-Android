// Generated by view binder compiler. Do not edit!
package com.apphud.sampleapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.apphud.sampleapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonCopy;

  @NonNull
  public final Button buttonGenerate;

  @NonNull
  public final ConstraintLayout colorView;

  @NonNull
  public final TextView labelCounter;

  @NonNull
  public final TextView labelYourColor;

  @NonNull
  public final TextView title;

  private FragmentMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonCopy,
      @NonNull Button buttonGenerate, @NonNull ConstraintLayout colorView,
      @NonNull TextView labelCounter, @NonNull TextView labelYourColor, @NonNull TextView title) {
    this.rootView = rootView;
    this.buttonCopy = buttonCopy;
    this.buttonGenerate = buttonGenerate;
    this.colorView = colorView;
    this.labelCounter = labelCounter;
    this.labelYourColor = labelYourColor;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCopy;
      Button buttonCopy = ViewBindings.findChildViewById(rootView, id);
      if (buttonCopy == null) {
        break missingId;
      }

      id = R.id.buttonGenerate;
      Button buttonGenerate = ViewBindings.findChildViewById(rootView, id);
      if (buttonGenerate == null) {
        break missingId;
      }

      id = R.id.colorView;
      ConstraintLayout colorView = ViewBindings.findChildViewById(rootView, id);
      if (colorView == null) {
        break missingId;
      }

      id = R.id.labelCounter;
      TextView labelCounter = ViewBindings.findChildViewById(rootView, id);
      if (labelCounter == null) {
        break missingId;
      }

      id = R.id.labelYourColor;
      TextView labelYourColor = ViewBindings.findChildViewById(rootView, id);
      if (labelYourColor == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new FragmentMainBinding((ConstraintLayout) rootView, buttonCopy, buttonGenerate,
          colorView, labelCounter, labelYourColor, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
