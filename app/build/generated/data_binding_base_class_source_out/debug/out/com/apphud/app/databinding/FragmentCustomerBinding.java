// Generated by view binder compiler. Do not edit!
package com.apphud.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import com.apphud.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCustomerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView appVersion;

  @NonNull
  public final Button btnSync;

  @NonNull
  public final TextView customerId;

  @NonNull
  public final TextView idAppInfo;

  @NonNull
  public final TextView idCustomer;

  @NonNull
  public final TextView idInfo;

  @NonNull
  public final ConstraintLayout layoutAppInfo;

  @NonNull
  public final LinearLayout layoutCustomer;

  @NonNull
  public final ConstraintLayout layoutInfo;

  @NonNull
  public final ConstraintLayout layoutUserId;

  @NonNull
  public final RecyclerView paywallsList;

  @NonNull
  public final TextView sdk;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final TextView txtPaywallsTitle;

  private FragmentCustomerBinding(@NonNull LinearLayout rootView, @NonNull TextView appVersion,
      @NonNull Button btnSync, @NonNull TextView customerId, @NonNull TextView idAppInfo,
      @NonNull TextView idCustomer, @NonNull TextView idInfo,
      @NonNull ConstraintLayout layoutAppInfo, @NonNull LinearLayout layoutCustomer,
      @NonNull ConstraintLayout layoutInfo, @NonNull ConstraintLayout layoutUserId,
      @NonNull RecyclerView paywallsList, @NonNull TextView sdk,
      @NonNull SwipeRefreshLayout swipeRefresh, @NonNull TextView txtPaywallsTitle) {
    this.rootView = rootView;
    this.appVersion = appVersion;
    this.btnSync = btnSync;
    this.customerId = customerId;
    this.idAppInfo = idAppInfo;
    this.idCustomer = idCustomer;
    this.idInfo = idInfo;
    this.layoutAppInfo = layoutAppInfo;
    this.layoutCustomer = layoutCustomer;
    this.layoutInfo = layoutInfo;
    this.layoutUserId = layoutUserId;
    this.paywallsList = paywallsList;
    this.sdk = sdk;
    this.swipeRefresh = swipeRefresh;
    this.txtPaywallsTitle = txtPaywallsTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCustomerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCustomerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_customer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCustomerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appVersion;
      TextView appVersion = rootView.findViewById(id);
      if (appVersion == null) {
        break missingId;
      }

      id = R.id.btnSync;
      Button btnSync = rootView.findViewById(id);
      if (btnSync == null) {
        break missingId;
      }

      id = R.id.customerId;
      TextView customerId = rootView.findViewById(id);
      if (customerId == null) {
        break missingId;
      }

      id = R.id.idAppInfo;
      TextView idAppInfo = rootView.findViewById(id);
      if (idAppInfo == null) {
        break missingId;
      }

      id = R.id.idCustomer;
      TextView idCustomer = rootView.findViewById(id);
      if (idCustomer == null) {
        break missingId;
      }

      id = R.id.idInfo;
      TextView idInfo = rootView.findViewById(id);
      if (idInfo == null) {
        break missingId;
      }

      id = R.id.layoutAppInfo;
      ConstraintLayout layoutAppInfo = rootView.findViewById(id);
      if (layoutAppInfo == null) {
        break missingId;
      }

      LinearLayout layoutCustomer = (LinearLayout) rootView;

      id = R.id.layoutInfo;
      ConstraintLayout layoutInfo = rootView.findViewById(id);
      if (layoutInfo == null) {
        break missingId;
      }

      id = R.id.layoutUserId;
      ConstraintLayout layoutUserId = rootView.findViewById(id);
      if (layoutUserId == null) {
        break missingId;
      }

      id = R.id.paywallsList;
      RecyclerView paywallsList = rootView.findViewById(id);
      if (paywallsList == null) {
        break missingId;
      }

      id = R.id.sdk;
      TextView sdk = rootView.findViewById(id);
      if (sdk == null) {
        break missingId;
      }

      id = R.id.swipeRefresh;
      SwipeRefreshLayout swipeRefresh = rootView.findViewById(id);
      if (swipeRefresh == null) {
        break missingId;
      }

      id = R.id.txtPaywallsTitle;
      TextView txtPaywallsTitle = rootView.findViewById(id);
      if (txtPaywallsTitle == null) {
        break missingId;
      }

      return new FragmentCustomerBinding((LinearLayout) rootView, appVersion, btnSync, customerId,
          idAppInfo, idCustomer, idInfo, layoutAppInfo, layoutCustomer, layoutInfo, layoutUserId,
          paywallsList, sdk, swipeRefresh, txtPaywallsTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
