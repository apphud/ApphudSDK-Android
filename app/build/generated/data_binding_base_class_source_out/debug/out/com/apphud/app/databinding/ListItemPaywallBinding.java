// Generated by view binder compiler. Do not edit!
package com.apphud.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.apphud.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemPaywallBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView idDefault;

  @NonNull
  public final TextView idExperiment;

  @NonNull
  public final TextView idJson;

  @NonNull
  public final ImageView idPaywallImage;

  @NonNull
  public final TextView idVariation;

  @NonNull
  public final LinearLayout layoutHolder;

  @NonNull
  public final ConstraintLayout layoutJson;

  @NonNull
  public final TextView paywallDefault;

  @NonNull
  public final TextView paywallExperiment;

  @NonNull
  public final TextView paywallJson;

  @NonNull
  public final TextView paywallName;

  @NonNull
  public final TextView paywallVariation;

  private ListItemPaywallBinding(@NonNull LinearLayout rootView, @NonNull TextView idDefault,
      @NonNull TextView idExperiment, @NonNull TextView idJson, @NonNull ImageView idPaywallImage,
      @NonNull TextView idVariation, @NonNull LinearLayout layoutHolder,
      @NonNull ConstraintLayout layoutJson, @NonNull TextView paywallDefault,
      @NonNull TextView paywallExperiment, @NonNull TextView paywallJson,
      @NonNull TextView paywallName, @NonNull TextView paywallVariation) {
    this.rootView = rootView;
    this.idDefault = idDefault;
    this.idExperiment = idExperiment;
    this.idJson = idJson;
    this.idPaywallImage = idPaywallImage;
    this.idVariation = idVariation;
    this.layoutHolder = layoutHolder;
    this.layoutJson = layoutJson;
    this.paywallDefault = paywallDefault;
    this.paywallExperiment = paywallExperiment;
    this.paywallJson = paywallJson;
    this.paywallName = paywallName;
    this.paywallVariation = paywallVariation;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemPaywallBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemPaywallBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_paywall, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemPaywallBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.idDefault;
      TextView idDefault = rootView.findViewById(id);
      if (idDefault == null) {
        break missingId;
      }

      id = R.id.idExperiment;
      TextView idExperiment = rootView.findViewById(id);
      if (idExperiment == null) {
        break missingId;
      }

      id = R.id.idJson;
      TextView idJson = rootView.findViewById(id);
      if (idJson == null) {
        break missingId;
      }

      id = R.id.idPaywallImage;
      ImageView idPaywallImage = rootView.findViewById(id);
      if (idPaywallImage == null) {
        break missingId;
      }

      id = R.id.idVariation;
      TextView idVariation = rootView.findViewById(id);
      if (idVariation == null) {
        break missingId;
      }

      LinearLayout layoutHolder = (LinearLayout) rootView;

      id = R.id.layoutJson;
      ConstraintLayout layoutJson = rootView.findViewById(id);
      if (layoutJson == null) {
        break missingId;
      }

      id = R.id.paywallDefault;
      TextView paywallDefault = rootView.findViewById(id);
      if (paywallDefault == null) {
        break missingId;
      }

      id = R.id.paywallExperiment;
      TextView paywallExperiment = rootView.findViewById(id);
      if (paywallExperiment == null) {
        break missingId;
      }

      id = R.id.paywallJson;
      TextView paywallJson = rootView.findViewById(id);
      if (paywallJson == null) {
        break missingId;
      }

      id = R.id.paywallName;
      TextView paywallName = rootView.findViewById(id);
      if (paywallName == null) {
        break missingId;
      }

      id = R.id.paywallVariation;
      TextView paywallVariation = rootView.findViewById(id);
      if (paywallVariation == null) {
        break missingId;
      }

      return new ListItemPaywallBinding((LinearLayout) rootView, idDefault, idExperiment, idJson,
          idPaywallImage, idVariation, layoutHolder, layoutJson, paywallDefault, paywallExperiment,
          paywallJson, paywallName, paywallVariation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
